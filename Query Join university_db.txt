Query con Join
1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT `students`.*, `degrees`.`id`, `degrees`.`name`
FROM `students` INNER JOIN `degrees` 
ON `degrees`.`id` = `students`.`degree_id` 
WHERE `degrees`.`name` = "Corso di Laurea in Economia";

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze
SELECT `degrees`.*, `departments`.`name`
FROM `degrees` INNER JOIN `departments` 
ON `departments`.`id` = `degrees`.`department_id` 
WHERE `departments`.`name` = "Dipartimento di Neuroscienze" AND `degrees`.`level` = "Magistrale";

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT `teachers`.*, `courses`.`name`
FROM `teachers` 
INNER JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`  
INNER JOIN `courses` ON `courses`.`id` = `course_teacher`.`course_id`  
WHERE `teachers`.`id`= 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome
SELECT `students`.*, `departments`.`name`, `degrees`.`name`
FROM `students` 
INNER JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id` 
INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id` 
ORDER BY `students`.`surname`, `students`.`name`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT `teachers`.`name`, `teachers`.`surname`, `courses`.`name`, `degrees`.*  
FROM `degrees` 
INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id` 
INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id` 
INNER JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)
SELECT DISTINCT `departments`.`name`, `teachers`.*  
FROM `departments` 
INNER JOIN `degrees` ON `departments`.`id` = `degrees`.`department_id` 
INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id` 
INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id` 
INNER JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`
WHERE `departments`.`name` = "Dipartimento di Matematica";

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.
SELECT `students`.`id`, `students`.`name`, `students`.`surname`, MAX(`exam_student`.`vote`) AS `max_vote`, 
COUNT(`students`.`id` = `exams`.`id`) AS `tentativi`
FROM `students` 
INNER JOIN `exam_student` ON `exam_student`.`student_id` = `students`.`id`
INNER JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
GROUP BY `students`.`id`, `exam_student`.`vote`
HAVING `exam_student`.`vote` >= 18
ORDER BY `students`.`id`;
